<?php

/**
 * @file
 * Contains helloworld.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_help().
 */
function helloworld_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the helloworld module.
    case 'help.page.helloworld':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Hello World example module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function helloworld_theme() {
  return [
    'helloworld' => [
      'render element' => 'children',
    ],
  ];
}
//hook_form_alter --used to change in the forms(defualt value assigning )
function helloworld_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
		$current_path = \Drupal::service('path.current')->getPath();


	
		//dump($form_id);	
/*
		$current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
	$current_now = \Drupal::currentUser();
	$roles_now = $current_user->getRoles();
	$current_user_id = $current_now->id();
	if(in_array('data_entry',$roles_now)) {
		$user123 = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
		$current_user_id = $user123->field_operatorcompany->getValue()[0]['target_id'];
	}
	$query = \Drupal::entityQuery('user');
	$results = $query->condition('field_operatorcompany', $current_user_id )->execute();
	//$results[$current_user_id]=$current_user_id;
	//$str = implode('+',$results);
		//dump($results);*/
		$path_args = explode('/', $current_path);
	//	dump($form_id);
		switch($form_id){
			case 'user_register_form':
					$form = _user_register_form($form,$path_args);
					break;
			case 'node_vehicle_assigment_form':
					$form = _vehicle_assignment_form($form,$path_args);
					$form = _vehicle_assignment_driver_options($form,$path_args);
					$form = _driver_assignment_options($form,$path_args);
					$form['actions']['submit']['#submit'][] = '_vehicle_assignment_submit';
				  break;
			case 'node_vehicle_assigment_edit_form':
					$form['actions']['submit']['#submit'][] = '_vehicle_unassignment_submit';

					break;	  
			case 'user_form':
				//	dump($form['role_change']['widget']['#default_value']);
					$form =_remove_roles($form);			
						break;
			case  'role_delegation_role_assign_form':
//
					//	dump($form['account']['role_change']['#default_value']);
					/*dump($form);*/
					$form =_remove_selection_roles($form);			
						break;
		}
	}
	
function helloworld_node_builder(&$fields, \Drupal\Core\Entity\EntityTypeInterface $entity_type, $bundle) {
	echo '@@'; exit;
}

function get_role_array($role_name, $form)
{
	$roles = array();

	foreach($form['account']['roles']['#options'] as $key => $value) {
		if($value == $role_name) {
			$roles[] = $key;
			break;
		}
	}

	return $roles;
}

//operator ergistration and company regostration different js 
//hook_page_attachments
function helloworld_page_attachments(array &$page) {
	$current_path = \Drupal::service('path.current')->getPath();
	$path_args = explode('/', $current_path);
	//dump($path_args);
if(($path_args[2]=="register" && $path_args[3]=="company")|| ($path_args[1]=="user" && $path_args[2]=="login")) {
		$page['#attached']['library'][] = 'helloworld/company-lib';
	} 
	ELSE 	if(($path_args[2]=="register" &&  $path_args[3]=="data_entry") || ($path_args[1]=="user" && $path_args[3]=="roles")) 
	{
	//	dump($path_args);
		$page['#attached']['library'][] = 'helloworld/operator-lib';
	}
	ELSE if($path_args[3]=="edit"){
		
	$page['#attached']['library'][] = 'helloworld/general-lib';

 }
	
}
function _user_register_form($form,$path_args)
{
				
 				$form['account']['mail']['#description'] = '';
				$form['account']['name']['#description'] = '';
				if($path_args[3]=="data_entry"){
					$roles = get_role_array('Operator', $form);
					$form['account']['roles']['#default_value'] = $roles;
					$current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
						
				//	dump(\Drupal\user\Entity\User::load(\Drupal::currentUser()->id()));
					$form['field_operatorcompany']['widget'][0]['target_id']['#default_value'] = $current_user;
					$form['#attached']['library'][] = 'helloworld/operator-lib';
					/*$form['field_first_name']['widget'][0]['value']['#default_value'][0] = 'value';*/
				}
				else if($path_args[3]=="company") {
					$roles = get_role_array('company', $form);
					$form['account']['roles']['#default_value'] = $roles;
					}
					return $form;
				//dump($form);			

}
function _vehicle_assignment_form($form,$path_args)
{
return $form;
}
function _vehicle_assignment_driver_options($form,$path_args)
{

	$view = \Drupal\views\Views::getView('driver_details');
	$view->setDisplay('entity_reference_1');
	// contextual relationship filter  
	//$view->setArguments([$id]);
	$view->execute();
	$render_view = $view->result;
	$unpubishedList = array('_none'=>'- Select a value -');

	foreach($view->result as $value){
		//dump($view->result);
		$tet = $value->_entity;

		$nid = $tet->get("nid")->getValue()[0]['value'];
		$title = $tet->get("title")->getValue()[0]['value'];
		$unpubishedList[$nid] = $title;
	}
	//  	dump($unpubishedList);
	//dump($form['field_driver_name']['widget']['#options']);
	$form['field_driver_name']['widget']['#options'] = $unpubishedList;
return $form;

}


function _driver_assignment_options($form,$path_args)
{


	$view = \Drupal\views\Views::getView('driver_details');
	$view->setDisplay('entity_reference_2');
	// contextual relationship filter  
	//$view->setArguments([$id]);
	$view->execute();
	$render_view = $view->result;
	$unpubishedList = array('_none'=>'- Select a value -');

	foreach($view->result as $value){
		//dump($view->result);
		$tet = $value->_entity;

		$nid = $tet->get("nid")->getValue()[0]['value'];
		$title = $tet->get("title")->getValue()[0]['value'];
		$unpubishedList[$nid] = $title;
	}
	//      dump($unpubishedList);
	//dump($form['field_driver_name']['widget']['#options']);
	$form['field_vehicle']['widget']['#options'] = $unpubishedList;
	return $form;


}
function _vehicle_assignment_submit(array $form, \Drupal\Core\Form\FormStateInterface $form_state)
{
	$driver_id=$form_state->getValue('field_driver_name')['0']['target_id'];
	$vehicle_id =$form_state->getValue('field_vehicle')['0']['target_id'];

	$driver_node=Node::load($driver_id);
	$vehicle_node = Node::load($vehicle_id);

	$driver_node->status = 0;
	$vehicle_node->status =0;

	$driver_node->save();
	$vehicle_node->save();

}	


function _vehicle_unassignment_submit(array $form, \Drupal\Core\Form\FormStateInterface $form_state)
{
	//$published_state_get=$form_state->getValue('status');
	//dump($published_state_get);

	$driver_id=$form_state->getValue('field_driver_name')['0']['target_id'];
	$vehicle_id =$form_state->getValue('field_vehicle')['0']['target_id'];

	$driver_node=Node::load($driver_id);
	$vehicle_node = Node::load($vehicle_id);

	$driver_node->status = 1;
	$vehicle_node->status =1;

	$driver_node->save();
	$vehicle_node->save();

}
function _remove_roles($form)
{
	if(!empty($form['role_change']['widget']['#default_value']) &&  in_array('data_entry',$form['role_change']['widget']['#default_value'] ))
	{
		unset($form['role_change']['widget']['#options']
				['digitec_super_admin']);
		unset($form['role_change']['widget']['#options']
				['administrator']);
		unset($form['role_change']['widget']['#options']
				['data_entry']);
		unset($form['role_change']['widget']['#options']
				['company']);
	}
	return $form;
}
function _remove_selection_roles($form)
{
	if(!empty($form['account']['role_change']['#default_value']) &&  in_array('data_entry',$form['account']['role_change']['#default_value'] ))
	{		

	//	unset($form['account']['role_change']['#options']
	//				['digitec_super_admin']);
	//	unset($form['account']['role_change']['#options']
	//			['administrator']);
	//	unset($form['account']['role_change']['#options']
	//			['data_entry']);
	//	unset($form['account']['role_change']['#options']
	//			['company']);
	}
	return $form;
}
function helloworld_views_query_alter(Drupal\views\ViewExecutable $view, Drupal\views\Plugin\views\query\Sql $query) {
	//$dump($view->id());

	if ($view->id() == 'driver_details' && $view->getDisplay()->display['id'] == 'entity_reference_1') {
		// Traverse through the 'where' part of the query.
		foreach ($query->where as &$condition_group) {
			foreach ($condition_group['conditions'] as &$condition) {
				if (strpos($condition['field'], 'groups_field_data_id')) {
					$db = \Drupal::database();
					$result = $db->select('group_content_field_data', 'gcfd');
					$result->fields('gcfd', array('gid'))
						->condition('gcfd.entity_id', \Drupal::currentUser()->id());
					$val = $result->execute()->fetchCol();
					$condition['value'][':groups_field_data_id[]'] = $val;
				}
			}
		}
	}
}
